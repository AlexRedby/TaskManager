CREATE TABLE USERS(
	user_id NUMBER PRIMARY KEY,
	name VARCHAR2(50 CHAR) NOT NULL,
	password VARCHAR2(100 CHAR) NOT NULL
);

CREATE TABLE TASKS(
    task_id     NUMBER PRIMARY KEY,
    name       	VARCHAR2(50 CHAR) NOT NULL,
    info        VARCHAR2(1000 CHAR),
    date_time 	DATE NOT NULL,
    contacts 	VARCHAR2(100 CHAR),
    			-- NUMBER(1) = BOOLEAN
    active 		NUMBER(1) NOT NULL,
    owner 		NUMBER NOT NULL,

    CONSTRAINT owner_fk
    	FOREIGN KEY (owner)
    	REFERENCES USERS (user_id)
);

CREATE SEQUENCE USERS_SEQ
INCREMENT BY 1 
START WITH 1
CACHE 10
NOORDER
NOCYCLE;
/

CREATE SEQUENCE TASKS_SEQ
INCREMENT BY 1 
START WITH 1
CACHE 10
NOORDER
NOCYCLE;
/

CREATE OR REPLACE TRIGGER INSERTING_AND_UPDATING_USERS BEFORE 
	INSERT OR UPDATE ON USERS
    FOR EACH ROW
BEGIN
	IF(INSERTING AND :new.user_id IS NULL) THEN
    	:new.user_id := USERS_SEQ.NEXTVAL;
    ELSIF(UPDATING AND :new.user_id <> :old.user_id) THEN
    	RAISE_APPLICATION_ERROR(-20001,'ID нельзя менять!');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER INSERTING_AND_UPDATING_TASKS BEFORE 
	INSERT OR UPDATE ON TASKS
    FOR EACH ROW
BEGIN
	IF(INSERTING AND :new.task_id IS NULL) THEN
    	:new.task_id := TASKS_SEQ.NEXTVAL;
    ELSIF(UPDATING AND :new.task_id <> :old.task_id) THEN
    	RAISE_APPLICATION_ERROR(-20001,'ID нельзя менять!');
    END IF;
END;
/